package charAt_scanners_optionDialogs;
//    Copyright (c) The League of Amazing Programmers 2013-2017

//    Level 0

import java.io.IOException;
import java.util.Scanner;

public class PiAloud {
	// 1. Make a main method and make sure your program can run

	public static void main(String[] args) {

		// 2. Make a String variable to hold the value of Pi. You could use
		// http://www.piday.org/million/ for the value.

		String pi = "3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798"
				+ "214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097"
				+ "566593344612847564823378678316527120190914564856692346034861045432664821339360726024914127372458700660631558817"
				+ "488152092096282925409171536436789259036001133053054882046652138414695194151160943305727036575959195309218611738"
				+ "193261179310511854807446237996274956735188575272489122793818301194912983367336244065664308602139494639522473719"
				+ "07021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214"
				+ "684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499"
				+ "999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875"
				+ "3320838142061717766914730359825349042875546873115956286388235378759375195778185778053217122680661300192787661119"
				+ "5909216420198938095257201065485863278865936153381827968230301952035301852968995773622599413891249721775283479131"
				+ "51557485724245415069595082953311686172785588907509838175463746493931925506040092770167113900984882401285836160356"
				+ "370766010471018194295559619894676783744944825537977472684710404753464620804668425906949129331367702898915210475216"
				+ "205696602405803815019351125338243003558764024749647326391419927260426992279678235478163600934172164121992458631503"
				+ "028618297455570674983850549458858692699569092721079750930295532116534498720275596023648066549911988183479775356636"
				+ "9807426542527862551818417574672890977772793800081647060016145249192173217214772350141441973568548161361157352552133"
				+ "4757418494684385233239073941433345477624168625189835694855620992192221842725502542568876717904946016534668049886272"
				+ "3279178608578438382796797668145410095388378636095068006422512520511739298489608412848862694560424196528502221066118"
				+ "6306744278622039194945047123713786960956364371917287467764657573962413890865832645995813390478027590099465764078951"
				+ "2694683983525957098258226205224894077267194782684826014769909026401363944374553050682034962524517493996514314298091"
				+ "90659250937221696461515709858387410597885959772975498930161753928468138268683868942774155991855925245953959431049972"
				+ "52468084598727364469584865383673622262609912460805124388439045124413654976278079771569143599770012961608944169486855"
				+ "58484063534220722258284886481584560285060168427394522674676788952521385225499546667278239864565961163548862305774564"
				+ "98035593634568174324112515076069479451096596094025228879710893145669136867228748940560101503308617928680920874760917"
				+ "8249385890097149096759852613655497818931297848216829989487226588048575640142704775551323796414515237462343645428584"
				+ "44795265867821051141354735739523113427166102135969536231442952484937187110145765403590279934403742007310578539062198"
				+ "387447808478489683321445713868751943506430218453191048481005370614680674919278191197939952061419663428754440643745123"
				+ "71819217999839101591956181467514269123974894090718649423196156794520809514655022523160388193014209376213785595663893"
				+ "77870830390697920773467221825625996615014215030680384477345492026054146659252014974428507325186660021324340881907104"
				+ "8633173464965145390579626856100550810665879699816357473638405257145910289706414011097120628043903975951567715770042"
				+ "0337869936007230558763176359421873125147120532928191826186125867321579198414848829164470609575270695722091756711672"
				+ "291098169091528017350671274858322287183520935396572512108357915136988209144421006751033467110314126711136990865851639";

		// 3. Print out some digits of Pi. The first value is "pi.charAt(0)", the second
		// is "pi.charAt(1)"
		System.out.println(pi.charAt(0));
		System.out.print(pi.charAt(1));
		// 4. Print ALL the digits of of Pi (hint: use a loop)
		for (int i = 0; i < pi.length() - 1; i++) {
			System.out.println(pi.charAt(i));

			// 5. Use the speak() method to speak all the digits of Pi.
			speak(pi.charAt(i));
			// [ADVANCED]
			// *6. Get a character from the user using the getInputFromUser() method
			char pie = getInputFromUser();
			// *7. Compare the users' char to the next digit of Pi
			if (pie == pi.charAt(i + 1)) {
				System.out.println("Correct");
			} else {
				System.out.println("Incorrect.");
			}
			// *8. If they are correct, print out "correct". If they are not, print
			// "incorrect" to System.err.println
		}
	}

	static void speak(char characterToSpeak) {
		try {
			Runtime.getRuntime().exec("say " + characterToSpeak).waitFor();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private static void pause(int seconds) {
		try {
			Thread.sleep(1000 * seconds);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	static char getInputFromUser() {
		Scanner scanner = new Scanner(System.in);
		return scanner.next().toCharArray()[0];
	}

}
